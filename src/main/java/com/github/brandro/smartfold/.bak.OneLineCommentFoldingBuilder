package com.github.brandro.smartfold

import com.intellij.lang.ASTNode
import com.intellij.lang.folding.FoldingBuilder
import com.intellij.lang.folding.FoldingBuilderEx
import com.intellij.lang.folding.FoldingDescriptor
import com.intellij.openapi.editor.Document
import com.intellij.openapi.project.DumbAware
import com.intellij.psi.PsiComment
import com.intellij.psi.PsiElement
import com.intellij.psi.util.PsiTreeUtil
import com.intellij.util.containers.toArray

class OneLineCommentFoldingBuilder : FoldingBuilderEx(), DumbAware {
    override fun buildFoldRegions(
        p0: PsiElement,
        p1: Document,
        p2: Boolean
    ): Array<out FoldingDescriptor?> {
        val descriptors: MutableList<FoldingDescriptor> = ArrayList()
        // Find your single-line comments
        val comments: Array<PsiElement> = PsiTreeUtil.findChildrenOfType(
            p0, PsiComment::class.java
        ).toArray(PsiElement.EMPTY_ARRAY)

        for (comment in comments) {
            descriptors.add(
                FoldingDescriptor(
                    comment.node,
                    comment.textRange,
                    null,
                )
            )
        }

        return descriptors.toArray(FoldingDescriptor.EMPTY_ARRAY)
    }

    override fun getPlaceholderText(node: ASTNode): String? {
        return "..."
    }

    override fun isCollapsedByDefault(p0: ASTNode): Boolean {
        return true
    }

}